{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction SnakeComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const result_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(result_r1);\n  }\n}\n\nexport let SnakeComponent = /*#__PURE__*/(() => {\n  class SnakeComponent {\n    constructor() {\n      this.resultados = Array();\n\n      for (let index = 1; index < 15; index++) {\n        this.gerarNumeros();\n      }\n    }\n\n    ngOnInit() {}\n\n    gerarNumeros() {\n      const min = Math.ceil(1);\n      const max = Math.floor(25);\n      let result = Array();\n\n      while (result.length <= 8) {\n        let value = Math.floor(Math.random() * (max - min)) + min;\n\n        if (value % 2 === 0 && !result.includes(value)) {\n          console.log('ta vindo');\n          console.log(result.length, 'tamanho');\n          result.push(value);\n        }\n      }\n\n      let result2 = Array();\n\n      while (result2.length <= 7) {\n        let value = Math.floor(Math.random() * (max - min)) + min;\n\n        if (value % 2 !== 0 && !result2.includes(value)) {\n          result2.push(value);\n        }\n      }\n\n      let concat = result.concat(result2);\n      this.resultados.push(concat);\n    }\n\n  }\n\n  SnakeComponent.ɵfac = function SnakeComponent_Factory(t) {\n    return new (t || SnakeComponent)();\n  };\n\n  SnakeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SnakeComponent,\n    selectors: [[\"app-snake\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"result\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function SnakeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"Hello Snake\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"ul\");\n        i0.ɵɵtemplate(4, SnakeComponent_li_4_Template, 2, 1, \"li\", 1);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.resultados);\n      }\n    },\n    directives: [i1.NgForOf],\n    styles: [\"\"]\n  });\n  return SnakeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}